/* This file was generated by SableCC (http://www.sablecc.org/). */

package glossaeditor.export.htmlgenerator.lexer;

import java.io.*;
import glossaeditor.export.htmlgenerator.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private PushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") PushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        int middle = (low + high) / 2;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComment(text, line, pos); }
    Token new1(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLineEnd(text, line, pos); }
    Token new2(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSpace(line, pos); }
    Token new3(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTab(text, line, pos); }
    Token new4(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDataType(text, line, pos); }
    Token new5(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKeyword(text, line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAssign(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDifferent(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLt(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGt(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLte(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGte(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAmp(line, pos); }
    Token new13(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOperators(text, line, pos); }
    Token new14(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBrackets(text, line, pos); }
    Token new15(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSymbols(text, line, pos); }
    Token new16(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNumber(text, line, pos); }
    Token new17(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TString(text, line, pos); }
    Token new18(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBoolean(text, line, pos); }
    Token new19(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIdentifier(text, line, pos); }
    Token new20(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMisc(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{0, 8, 1}, {9, 9, 2}, {10, 10, 3}, {11, 12, 1}, {13, 13, 4}, {14, 31, 1}, {32, 32, 5}, {33, 33, 6}, {34, 37, 1}, {38, 38, 7}, {39, 39, 8}, {40, 40, 9}, {41, 41, 10}, {42, 42, 11}, {43, 43, 12}, {44, 44, 13}, {45, 45, 14}, {46, 46, 15}, {47, 47, 16}, {48, 57, 17}, {58, 58, 18}, {59, 59, 1}, {60, 60, 19}, {61, 61, 20}, {62, 62, 21}, {63, 64, 1}, {65, 67, 22}, {68, 68, 23}, {69, 76, 22}, {77, 77, 24}, {78, 90, 22}, {91, 91, 25}, {92, 92, 1}, {93, 93, 26}, {94, 94, 27}, {95, 96, 1}, {97, 99, 28}, {100, 100, 29}, {101, 108, 28}, {109, 109, 30}, {110, 122, 28}, {123, 901, 1}, {902, 902, 31}, {903, 903, 1}, {904, 904, 32}, {905, 905, 33}, {906, 906, 34}, {907, 907, 1}, {908, 908, 35}, {909, 909, 1}, {910, 910, 36}, {911, 911, 37}, {912, 912, 38}, {913, 913, 39}, {914, 914, 40}, {915, 915, 41}, {916, 916, 42}, {917, 917, 43}, {918, 921, 40}, {922, 922, 44}, {923, 923, 45}, {924, 924, 46}, {925, 926, 40}, {927, 927, 47}, {928, 928, 48}, {929, 930, 40}, {931, 931, 49}, {932, 932, 50}, {933, 934, 40}, {935, 935, 51}, {936, 936, 52}, {937, 937, 40}, {938, 938, 53}, {939, 939, 54}, {940, 940, 55}, {941, 941, 56}, {942, 942, 57}, {943, 943, 58}, {944, 944, 59}, {945, 945, 60}, {946, 946, 61}, {947, 947, 62}, {948, 948, 63}, {949, 949, 64}, {950, 953, 61}, {954, 954, 65}, {955, 955, 66}, {956, 956, 67}, {957, 958, 61}, {959, 959, 68}, {960, 960, 69}, {961, 962, 61}, {963, 963, 70}, {964, 964, 71}, {965, 966, 61}, {967, 967, 72}, {968, 968, 73}, {969, 969, 61}, {970, 970, 74}, {971, 971, 75}, {972, 972, 76}, {973, 973, 77}, {974, 974, 78}, {975, 65535, 1}, },
            {},
            {},
            {},
            {{10, 10, 79}, },
            {},
            {{0, 9, 80}, {11, 12, 80}, {14, 65535, 80}, },
            {},
            {{0, 9, 81}, {11, 12, 81}, {14, 38, 81}, {39, 39, 82}, {40, 65535, 81}, },
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {{46, 46, 83}, {48, 57, 84}, },
            {},
            {{45, 45, 85}, {61, 61, 86}, {62, 62, 87}, },
            {},
            {{61, 61, 88}, },
            {{48, 57, 89}, {65, 90, 90}, {95, 95, 91}, {97, 122, 92}, {902, 902, 93}, {904, 904, 94}, {905, 905, 95}, {906, 906, 96}, {908, 908, 97}, {910, 910, 98}, {911, 911, 99}, {912, 912, 100}, {913, 937, 101}, {938, 938, 102}, {939, 939, 103}, {940, 940, 104}, {941, 941, 105}, {942, 942, 106}, {943, 943, 107}, {944, 944, 108}, {945, 969, 109}, {970, 970, 110}, {971, 971, 111}, {972, 972, 112}, {973, 973, 113}, {974, 974, 114}, },
            {{48, 57, 89}, {65, 72, 90}, {73, 73, 115}, {74, 90, 90}, {95, 95, 91}, {97, 104, 92}, {105, 105, 116}, {106, 122, 92}, {902, 974, -24}, },
            {{48, 57, 89}, {65, 78, 90}, {79, 79, 117}, {80, 90, 90}, {95, 95, 91}, {97, 110, 92}, {111, 111, 118}, {112, 122, 92}, {902, 974, -24}, },
            {},
            {},
            {},
            {{48, 974, -24}, },
            {{48, 974, -25}, },
            {{48, 974, -26}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 912, -24}, {913, 930, 101}, {931, 931, 119}, {932, 934, 101}, {935, 935, 120}, {936, 937, 101}, {938, 944, -24}, {945, 962, 109}, {963, 963, 121}, {964, 966, 109}, {967, 967, 122}, {968, 969, 109}, {970, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 912, -24}, {913, 921, 101}, {922, 922, 123}, {923, 923, 124}, {924, 924, 101}, {925, 925, 125}, {926, 927, 101}, {928, 928, 126}, {929, 929, 127}, {930, 937, 101}, {938, 944, -24}, {945, 953, 109}, {954, 954, 128}, {955, 955, 129}, {956, 956, 109}, {957, 957, 130}, {958, 959, 109}, {960, 960, 131}, {961, 961, 132}, {962, 969, 109}, {970, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 912, -24}, {913, 920, 101}, {921, 921, 133}, {922, 928, 101}, {929, 929, 134}, {930, 944, -41}, {945, 952, 109}, {953, 953, 135}, {954, 960, 109}, {961, 961, 136}, {962, 974, -41}, },
            {{48, 920, -43}, {921, 921, 137}, {922, 937, 101}, {938, 952, -43}, {953, 953, 138}, {954, 969, 109}, {970, 974, -24}, },
            {{48, 912, -24}, {913, 927, 101}, {928, 928, 139}, {929, 937, 101}, {938, 944, -24}, {945, 959, 109}, {960, 960, 140}, {961, 969, 109}, {970, 974, -24}, },
            {{48, 122, -24}, {902, 902, 141}, {904, 912, -24}, {913, 913, 142}, {914, 937, 101}, {938, 939, -24}, {940, 940, 143}, {941, 944, -24}, {945, 945, 144}, {946, 969, 109}, {970, 974, -24}, },
            {{48, 912, -24}, {913, 926, 101}, {927, 927, 145}, {928, 937, 101}, {938, 944, -24}, {945, 958, 109}, {959, 959, 146}, {960, 969, 109}, {970, 974, -24}, },
            {{48, 902, -24}, {904, 904, 147}, {905, 912, -24}, {913, 916, 101}, {917, 917, 148}, {918, 937, 101}, {938, 940, -24}, {941, 941, 149}, {942, 944, -24}, {945, 948, 109}, {949, 949, 150}, {950, 969, 109}, {970, 974, -24}, },
            {{48, 930, -37}, {931, 931, 151}, {932, 934, 101}, {935, 935, 152}, {936, 962, -37}, {963, 963, 153}, {964, 966, 109}, {967, 967, 154}, {968, 974, -37}, },
            {{48, 912, -24}, {913, 916, 101}, {917, 917, 155}, {918, 928, 101}, {929, 929, 156}, {930, 944, -41}, {945, 948, 109}, {949, 949, 157}, {950, 960, 109}, {961, 961, 158}, {962, 974, -41}, },
            {{48, 912, -24}, {913, 931, 101}, {932, 932, 159}, {933, 933, 160}, {934, 937, 101}, {938, 944, -24}, {945, 963, 109}, {964, 964, 161}, {965, 965, 162}, {966, 969, 109}, {970, 974, -24}, },
            {{48, 902, -24}, {904, 904, 163}, {905, 906, -24}, {908, 908, 164}, {910, 916, -48}, {917, 917, 165}, {918, 926, 101}, {927, 927, 166}, {928, 940, -47}, {941, 941, 167}, {942, 948, -48}, {949, 949, 168}, {950, 958, 109}, {959, 959, 169}, {960, 971, -47}, {972, 972, 170}, {973, 974, -24}, },
            {{48, 912, -24}, {913, 913, 171}, {914, 939, -46}, {940, 944, -24}, {945, 945, 172}, {946, 974, -46}, },
            {{48, 916, -50}, {917, 917, 173}, {918, 940, -48}, {941, 948, -50}, {949, 949, 174}, {950, 974, -48}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -41}, },
            {{48, 974, -24}, },
            {{48, 974, -43}, },
            {{48, 974, -44}, },
            {{48, 974, -45}, },
            {{48, 974, -46}, },
            {{48, 974, -47}, },
            {{48, 974, -48}, },
            {{48, 974, -49}, },
            {{48, 974, -50}, },
            {{48, 974, -51}, },
            {{48, 974, -52}, },
            {{48, 974, -53}, },
            {{48, 974, -54}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -37}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {},
            {{0, 65535, -8}, },
            {{0, 65535, -10}, },
            {},
            {{48, 57, 175}, },
            {{46, 57, -19}, },
            {},
            {},
            {},
            {},
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 57, 89}, {65, 85, 90}, {86, 86, 176}, {87, 90, 90}, {95, 95, 91}, {97, 117, 92}, {118, 118, 177}, {119, 122, 92}, {902, 974, -24}, },
            {{48, 974, -117}, },
            {{48, 57, 89}, {65, 67, 90}, {68, 68, 178}, {69, 90, 90}, {95, 95, 91}, {97, 99, 92}, {100, 100, 179}, {101, 122, 92}, {902, 974, -24}, },
            {{48, 974, -119}, },
            {{48, 926, -47}, {927, 927, 180}, {928, 958, -47}, {959, 959, 181}, {960, 974, -47}, },
            {{48, 920, -43}, {921, 921, 182}, {922, 952, -44}, {953, 953, 183}, {954, 974, -44}, },
            {{48, 974, -121}, },
            {{48, 974, -122}, },
            {{48, 902, -24}, {904, 904, 184}, {905, 916, -48}, {917, 917, 185}, {918, 940, -48}, {941, 941, 186}, {942, 948, -48}, {949, 949, 187}, {950, 974, -48}, },
            {{48, 912, -24}, {913, 918, 101}, {919, 919, 188}, {920, 922, 101}, {923, 923, 189}, {924, 937, 101}, {938, 944, -24}, {945, 950, 109}, {951, 951, 190}, {952, 954, 109}, {955, 955, 191}, {956, 969, 109}, {970, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 906, -24}, {908, 908, 192}, {910, 926, -47}, {927, 927, 193}, {928, 958, -47}, {959, 959, 194}, {960, 971, -47}, {972, 972, 195}, {973, 974, -24}, },
            {{48, 912, -24}, {913, 934, 101}, {935, 935, 196}, {936, 944, -37}, {945, 966, 109}, {967, 967, 197}, {968, 974, -37}, },
            {{48, 974, -125}, },
            {{48, 974, -126}, },
            {{48, 974, -24}, },
            {{48, 974, -128}, },
            {{48, 974, -129}, },
            {{48, 912, -24}, {913, 913, 198}, {914, 944, -53}, {945, 945, 199}, {946, 974, -46}, },
            {{48, 122, -24}, {902, 902, 200}, {904, 912, -24}, {913, 913, 201}, {914, 939, -46}, {940, 940, 202}, {941, 944, -24}, {945, 945, 203}, {946, 974, -46}, },
            {{48, 974, -135}, },
            {{48, 974, -136}, },
            {{48, 122, -24}, {902, 902, 204}, {904, 912, -24}, {913, 913, 205}, {914, 939, -46}, {940, 940, 206}, {941, 944, -24}, {945, 945, 207}, {946, 974, -46}, },
            {{48, 974, -139}, },
            {{48, 905, -24}, {906, 906, 208}, {908, 912, -24}, {913, 913, 209}, {914, 920, 101}, {921, 921, 210}, {922, 942, -44}, {943, 943, 211}, {944, 944, 108}, {945, 945, 212}, {946, 952, 109}, {953, 953, 213}, {954, 974, -44}, },
            {{48, 974, -141}, },
            {{48, 912, -24}, {913, 922, 101}, {923, 923, 214}, {924, 944, -126}, {945, 954, 109}, {955, 955, 215}, {956, 974, -126}, },
            {{48, 920, -43}, {921, 921, 216}, {922, 922, 101}, {923, 923, 217}, {924, 944, -126}, {945, 952, 109}, {953, 953, 218}, {954, 954, 109}, {955, 955, 219}, {956, 974, -126}, },
            {{48, 974, -143}, },
            {{48, 974, -144}, },
            {{48, 912, -24}, {913, 914, 101}, {915, 915, 220}, {916, 937, 101}, {938, 944, -24}, {945, 946, 109}, {947, 947, 221}, {948, 969, 109}, {970, 974, -24}, },
            {{48, 974, -147}, },
            {{48, 934, -129}, {935, 935, 222}, {936, 966, -129}, {967, 967, 223}, {968, 974, -37}, },
            {{9, 9, 224}, {32, 32, 225}, {48, 90, -24}, {95, 95, 226}, {97, 931, -51}, {932, 932, 227}, {933, 934, 101}, {935, 935, 228}, {936, 944, -37}, {945, 963, 109}, {964, 964, 229}, {965, 966, 109}, {967, 967, 230}, {968, 974, -37}, },
            {{48, 974, -149}, },
            {{9, 974, -150}, },
            {{48, 926, -47}, {927, 927, 231}, {928, 958, -47}, {959, 959, 232}, {960, 974, -47}, },
            {{48, 920, -43}, {921, 921, 233}, {922, 952, -44}, {953, 953, 234}, {954, 974, -44}, },
            {{48, 974, -153}, },
            {{48, 974, -154}, },
            {{48, 912, -24}, {913, 928, 101}, {929, 929, 235}, {930, 944, -41}, {945, 960, 109}, {961, 961, 236}, {962, 974, -41}, },
            {{48, 906, -24}, {908, 908, 237}, {910, 912, -24}, {913, 913, 238}, {914, 926, 101}, {927, 927, 239}, {928, 944, -47}, {945, 945, 240}, {946, 958, 109}, {959, 959, 241}, {960, 971, -47}, {972, 972, 242}, {973, 974, -24}, },
            {{48, 974, -157}, },
            {{48, 974, -158}, },
            {{48, 912, -24}, {913, 913, 243}, {914, 944, -53}, {945, 945, 244}, {946, 974, -46}, },
            {{48, 912, -24}, {913, 924, 101}, {925, 925, 245}, {926, 937, 101}, {938, 944, -24}, {945, 956, 109}, {957, 957, 246}, {958, 969, 109}, {970, 974, -24}, },
            {{48, 974, -161}, },
            {{48, 974, -162}, },
            {{48, 922, -143}, {923, 923, 247}, {924, 954, -143}, {955, 955, 248}, {956, 974, -126}, },
            {{48, 931, -51}, {932, 932, 249}, {933, 937, 101}, {938, 963, -51}, {964, 964, 250}, {965, 969, 109}, {970, 974, -24}, },
            {{48, 922, -143}, {923, 923, 251}, {924, 954, -143}, {955, 955, 252}, {956, 974, -126}, },
            {{48, 931, -51}, {932, 932, 253}, {933, 963, -166}, {964, 964, 254}, {965, 974, -166}, },
            {{48, 974, -165}, },
            {{48, 974, -167}, },
            {{48, 974, -168}, },
            {{48, 974, -166}, },
            {{48, 928, -157}, {929, 929, 255}, {930, 960, -157}, {961, 961, 256}, {962, 974, -41}, },
            {{48, 974, -173}, },
            {{48, 912, -24}, {913, 932, 101}, {933, 933, 257}, {934, 944, -51}, {945, 964, 109}, {965, 965, 258}, {966, 974, -51}, },
            {{48, 974, -175}, },
            {{48, 57, 175}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 928, -157}, {929, 929, 259}, {930, 960, -157}, {961, 961, 260}, {962, 974, -41}, },
            {{48, 928, -157}, {929, 929, 261}, {930, 960, -157}, {961, 961, 262}, {962, 974, -41}, },
            {{48, 974, -186}, },
            {{48, 974, -187}, },
            {{48, 912, -24}, {913, 919, 101}, {920, 920, 263}, {921, 937, 101}, {938, 944, -24}, {945, 951, 109}, {952, 952, 264}, {953, 969, 109}, {970, 974, -24}, },
            {{48, 920, -43}, {921, 921, 265}, {922, 952, -44}, {953, 953, 266}, {954, 974, -44}, },
            {{48, 974, -190}, },
            {{48, 974, -191}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 904, -24}, {905, 905, 267}, {906, 918, -126}, {919, 919, 268}, {920, 937, 101}, {938, 941, -24}, {942, 942, 269}, {943, 950, -126}, {951, 951, 270}, {952, 969, 109}, {970, 974, -24}, },
            {{48, 974, -198}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 912, -24}, {913, 935, 101}, {936, 936, 271}, {937, 937, 101}, {938, 944, -24}, {945, 967, 109}, {968, 968, 272}, {969, 969, 109}, {970, 974, -24}, },
            {{48, 935, -202}, {936, 936, 273}, {937, 967, -202}, {968, 968, 274}, {969, 974, -202}, },
            {{48, 974, -202}, },
            {{48, 974, -203}, },
            {{48, 912, -24}, {913, 913, 101}, {914, 914, 275}, {915, 937, 101}, {938, 944, -24}, {945, 945, 109}, {946, 946, 276}, {947, 969, 109}, {970, 974, -24}, },
            {{48, 913, -206}, {914, 914, 277}, {915, 915, 101}, {916, 916, 278}, {917, 937, 101}, {938, 945, -206}, {946, 946, 279}, {947, 947, 109}, {948, 948, 280}, {949, 969, 109}, {970, 974, -24}, },
            {{48, 974, -206}, },
            {{48, 974, -207}, },
            {{48, 922, -143}, {923, 923, 281}, {924, 954, -143}, {955, 955, 282}, {956, 974, -126}, },
            {{48, 924, -162}, {925, 925, 283}, {926, 956, -162}, {957, 957, 284}, {958, 974, -162}, },
            {{48, 922, -143}, {923, 923, 285}, {924, 954, -143}, {955, 955, 286}, {956, 974, -126}, },
            {{48, 974, -210}, },
            {{48, 974, -211}, },
            {{48, 974, -212}, },
            {{48, 916, -50}, {917, 917, 287}, {918, 948, -54}, {949, 949, 288}, {950, 974, -48}, },
            {{48, 974, -216}, },
            {{48, 974, -24}, },
            {{48, 916, -50}, {917, 917, 289}, {918, 948, -54}, {949, 949, 290}, {950, 974, -48}, },
            {{48, 974, -24}, },
            {{48, 974, -219}, },
            {{48, 920, -43}, {921, 921, 291}, {922, 952, -44}, {953, 953, 292}, {954, 974, -44}, },
            {{48, 974, -222}, },
            {{48, 928, -157}, {929, 929, 293}, {930, 960, -157}, {961, 961, 294}, {962, 974, -41}, },
            {{48, 974, -224}, },
            {{9, 32, -150}, {914, 914, 295}, {946, 946, 296}, },
            {{9, 946, -226}, },
            {{48, 913, -206}, {914, 914, 297}, {915, 945, -206}, {946, 946, 298}, {947, 974, -206}, },
            {{48, 912, -24}, {913, 913, 299}, {914, 944, -53}, {945, 945, 300}, {946, 974, -46}, },
            {{48, 928, -157}, {929, 929, 301}, {930, 960, -157}, {961, 961, 302}, {962, 974, -41}, },
            {{48, 974, -229}, },
            {{48, 974, -230}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 905, -24}, {906, 906, 303}, {908, 920, -43}, {921, 921, 304}, {922, 942, -44}, {943, 943, 305}, {944, 952, -43}, {953, 953, 306}, {954, 974, -44}, },
            {{48, 974, -237}, },
            {{48, 914, -147}, {915, 915, 307}, {916, 946, -147}, {947, 947, 308}, {948, 974, -147}, },
            {{48, 914, -147}, {915, 915, 309}, {916, 946, -147}, {947, 947, 310}, {948, 974, -147}, },
            {{48, 914, -147}, {915, 915, 311}, {916, 946, -147}, {947, 947, 312}, {948, 974, -147}, },
            {{48, 974, -240}, },
            {{48, 974, -241}, },
            {{48, 974, -239}, },
            {{48, 919, -190}, {920, 920, 313}, {921, 951, -190}, {952, 952, 314}, {953, 974, -190}, },
            {{48, 974, -245}, },
            {{48, 122, -24}, {902, 902, 315}, {904, 912, -24}, {913, 913, 316}, {914, 939, -46}, {940, 940, 317}, {941, 944, -24}, {945, 945, 318}, {946, 974, -46}, },
            {{48, 974, -247}, },
            {{48, 926, -47}, {927, 927, 319}, {928, 958, -47}, {959, 959, 320}, {960, 974, -47}, },
            {{48, 974, -249}, },
            {{48, 916, -50}, {917, 917, 321}, {918, 948, -54}, {949, 949, 322}, {950, 974, -48}, },
            {{48, 974, -251}, },
            {{48, 926, -47}, {927, 927, 323}, {928, 958, -47}, {959, 959, 324}, {960, 974, -47}, },
            {{48, 974, -253}, },
            {{48, 916, -50}, {917, 917, 325}, {918, 948, -54}, {949, 949, 326}, {950, 974, -48}, },
            {{48, 974, -255}, },
            {{48, 912, -24}, {913, 913, 327}, {914, 944, -53}, {945, 945, 328}, {946, 974, -46}, },
            {{48, 974, -257}, },
            {{48, 912, -24}, {913, 915, 101}, {916, 916, 329}, {917, 944, -207}, {945, 947, 109}, {948, 948, 330}, {949, 974, -207}, },
            {{48, 974, -259}, },
            {{48, 912, -24}, {913, 913, 331}, {914, 944, -53}, {945, 945, 332}, {946, 974, -46}, },
            {{48, 974, -261}, },
            {{48, 912, -24}, {913, 913, 333}, {914, 944, -53}, {945, 945, 334}, {946, 974, -46}, },
            {{48, 974, -263}, },
            {{48, 904, -24}, {905, 905, 335}, {906, 918, -126}, {919, 919, 336}, {920, 941, -198}, {942, 942, 337}, {943, 950, -126}, {951, 951, 338}, {952, 974, -198}, },
            {{48, 974, -265}, },
            {{48, 910, -24}, {911, 911, 339}, {912, 912, 100}, {913, 936, 101}, {937, 937, 340}, {938, 944, -24}, {945, 968, 109}, {969, 969, 341}, {970, 973, -24}, {974, 974, 342}, },
            {{48, 974, -267}, },
            {{48, 90, -24}, {95, 95, 343}, {97, 974, -24}, },
            {{48, 90, -24}, {95, 95, 344}, {97, 974, -24}, },
            {{48, 974, -269}, },
            {{48, 974, -270}, },
            {{48, 916, -50}, {917, 917, 345}, {918, 948, -54}, {949, 949, 346}, {950, 974, -48}, },
            {{48, 974, -273}, },
            {{48, 916, -50}, {917, 917, 347}, {918, 948, -54}, {949, 949, 348}, {950, 974, -48}, },
            {{48, 974, -275}, },
            {{48, 912, -24}, {913, 913, 349}, {914, 944, -53}, {945, 945, 350}, {946, 974, -46}, },
            {{48, 974, -277}, },
            {{48, 912, -24}, {913, 913, 351}, {914, 944, -53}, {945, 945, 352}, {946, 974, -46}, },
            {{48, 920, -43}, {921, 921, 353}, {922, 952, -44}, {953, 953, 354}, {954, 974, -44}, },
            {{48, 974, -279}, },
            {{48, 974, -280}, },
            {{48, 916, -50}, {917, 917, 355}, {918, 948, -54}, {949, 949, 356}, {950, 974, -48}, },
            {{48, 974, -283}, },
            {{48, 122, -24}, {902, 902, 357}, {904, 912, -24}, {913, 913, 358}, {914, 939, -46}, {940, 940, 359}, {941, 944, -24}, {945, 945, 360}, {946, 974, -46}, },
            {{48, 974, -285}, },
            {{48, 916, -50}, {917, 917, 361}, {918, 948, -54}, {949, 949, 362}, {950, 974, -48}, },
            {{48, 974, -287}, },
            {{48, 930, -37}, {931, 931, 363}, {932, 937, 101}, {938, 962, -37}, {963, 963, 364}, {964, 969, 109}, {970, 974, -24}, },
            {{48, 974, -289}, },
            {{48, 930, -37}, {931, 931, 365}, {932, 962, -289}, {963, 963, 366}, {964, 974, -289}, },
            {{48, 974, -291}, },
            {{48, 921, -41}, {922, 922, 367}, {923, 937, 101}, {938, 953, -41}, {954, 954, 368}, {955, 969, 109}, {970, 974, -24}, },
            {{48, 974, -293}, },
            {{48, 920, -43}, {921, 921, 369}, {922, 952, -44}, {953, 953, 370}, {954, 974, -44}, },
            {{48, 974, -295}, },
            {{905, 905, 371}, {919, 919, 372}, {942, 942, 373}, {951, 951, 374}, },
            {{905, 951, -297}, },
            {{48, 904, -24}, {905, 905, 375}, {906, 918, -126}, {919, 919, 376}, {920, 941, -198}, {942, 942, 377}, {943, 950, -126}, {951, 951, 378}, {952, 974, -198}, },
            {{48, 974, -299}, },
            {{48, 913, -206}, {914, 914, 379}, {915, 945, -206}, {946, 946, 380}, {947, 974, -206}, },
            {{48, 974, -301}, },
            {{48, 920, -43}, {921, 921, 381}, {922, 952, -44}, {953, 953, 382}, {954, 974, -44}, },
            {{48, 974, -303}, },
            {{48, 927, -45}, {928, 928, 383}, {929, 959, -45}, {960, 960, 384}, {961, 974, -45}, },
            {{48, 927, -45}, {928, 928, 385}, {929, 959, -45}, {960, 960, 386}, {961, 974, -45}, },
            {{48, 974, -305}, },
            {{48, 974, -306}, },
            {{48, 928, -157}, {929, 929, 387}, {930, 960, -157}, {961, 961, 388}, {962, 974, -41}, },
            {{48, 974, -309}, },
            {{48, 912, -24}, {913, 923, 101}, {924, 924, 389}, {925, 937, 101}, {938, 944, -24}, {945, 955, 109}, {956, 956, 390}, {957, 969, 109}, {970, 974, -24}, },
            {{48, 974, -311}, },
            {{48, 928, -157}, {929, 929, 391}, {930, 960, -157}, {961, 961, 392}, {962, 974, -41}, },
            {{48, 974, -313}, },
            {{48, 916, -50}, {917, 917, 393}, {918, 948, -54}, {949, 949, 394}, {950, 974, -48}, },
            {{48, 974, -315}, },
            {{48, 928, -157}, {929, 929, 395}, {930, 960, -157}, {961, 961, 396}, {962, 974, -41}, },
            {{48, 928, -157}, {929, 929, 397}, {930, 960, -157}, {961, 961, 398}, {962, 974, -41}, },
            {{48, 974, -317}, },
            {{48, 974, -318}, },
            {{48, 930, -37}, {931, 931, 399}, {932, 944, -289}, {945, 961, 109}, {962, 962, 400}, {963, 963, 401}, {964, 974, -289}, },
            {{48, 974, -321}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 930, -37}, {931, 931, 402}, {932, 961, -321}, {962, 962, 403}, {963, 963, 404}, {964, 974, -289}, },
            {{48, 974, -325}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 921, -41}, {922, 922, 405}, {923, 953, -293}, {954, 954, 406}, {955, 974, -293}, },
            {{48, 974, -329}, },
            {{48, 904, -24}, {905, 905, 407}, {906, 918, -126}, {919, 919, 408}, {920, 941, -198}, {942, 942, 409}, {943, 950, -126}, {951, 951, 410}, {952, 974, -198}, },
            {{48, 974, -331}, },
            {{48, 920, -43}, {921, 921, 411}, {922, 952, -44}, {953, 953, 412}, {954, 974, -44}, },
            {{48, 974, -333}, },
            {{48, 920, -43}, {921, 921, 413}, {922, 952, -44}, {953, 953, 414}, {954, 974, -44}, },
            {{48, 974, -335}, },
            {{48, 930, -37}, {931, 931, 415}, {932, 961, -321}, {962, 962, 416}, {963, 963, 417}, {964, 974, -289}, },
            {{48, 930, -37}, {931, 931, 418}, {932, 961, -321}, {962, 962, 419}, {963, 963, 420}, {964, 974, -289}, },
            {{48, 974, -337}, },
            {{48, 974, -338}, },
            {{48, 930, -37}, {931, 931, 421}, {932, 961, -321}, {962, 962, 422}, {963, 963, 423}, {964, 974, -289}, },
            {{48, 930, -37}, {931, 931, 424}, {932, 961, -321}, {962, 962, 425}, {963, 963, 426}, {964, 974, -289}, },
            {{48, 974, -342}, },
            {{48, 974, -341}, },
            {{48, 916, -50}, {917, 917, 427}, {918, 948, -54}, {949, 949, 428}, {950, 974, -48}, },
            {{48, 916, -50}, {917, 917, 429}, {918, 948, -54}, {949, 949, 430}, {950, 974, -48}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 930, -37}, {931, 931, 431}, {932, 962, -289}, {963, 963, 432}, {964, 974, -289}, },
            {{48, 974, -351}, },
            {{48, 930, -37}, {931, 931, 433}, {932, 962, -289}, {963, 963, 434}, {964, 974, -289}, },
            {{48, 974, -353}, },
            {{48, 921, -41}, {922, 922, 435}, {923, 953, -293}, {954, 954, 436}, {955, 974, -293}, },
            {{48, 974, -355}, },
            {{48, 912, -24}, {913, 925, 101}, {926, 926, 437}, {927, 937, 101}, {938, 944, -24}, {945, 957, 109}, {958, 958, 438}, {959, 969, 109}, {970, 974, -24}, },
            {{48, 974, -357}, },
            {{48, 922, -143}, {923, 923, 439}, {924, 954, -143}, {955, 955, 440}, {956, 974, -126}, },
            {{48, 922, -143}, {923, 923, 441}, {924, 954, -143}, {955, 955, 442}, {956, 974, -126}, },
            {{48, 974, -359}, },
            {{48, 974, -360}, },
            {{48, 925, -357}, {926, 926, 443}, {927, 957, -357}, {958, 958, 444}, {959, 974, -357}, },
            {{48, 974, -363}, },
            {{48, 916, -50}, {917, 917, 445}, {918, 948, -54}, {949, 949, 446}, {950, 974, -48}, },
            {{48, 974, -365}, },
            {{48, 916, -50}, {917, 917, 447}, {918, 948, -54}, {949, 949, 448}, {950, 974, -48}, },
            {{48, 974, -367}, },
            {{48, 902, -24}, {904, 904, 449}, {905, 905, 450}, {906, 916, -48}, {917, 917, 451}, {918, 918, 101}, {919, 919, 452}, {920, 940, -198}, {941, 941, 453}, {942, 942, 454}, {943, 948, -48}, {949, 949, 455}, {950, 950, 109}, {951, 951, 456}, {952, 974, -198}, },
            {{48, 974, -369}, },
            {{48, 930, -37}, {931, 931, 457}, {932, 962, -289}, {963, 963, 458}, {964, 974, -289}, },
            {{48, 974, -371}, },
            {{924, 924, 459}, {956, 956, 460}, },
            {{924, 924, 461}, {956, 956, 462}, },
            {{924, 956, -373}, },
            {{924, 956, -374}, },
            {{48, 923, -311}, {924, 924, 463}, {925, 955, -311}, {956, 956, 464}, {957, 974, -311}, },
            {{48, 923, -311}, {924, 924, 465}, {925, 955, -311}, {956, 956, 466}, {957, 974, -311}, },
            {{48, 974, -377}, },
            {{48, 974, -378}, },
            {{48, 922, -143}, {923, 923, 467}, {924, 954, -143}, {955, 955, 468}, {956, 974, -126}, },
            {{48, 974, -381}, },
            {{48, 930, -37}, {931, 931, 469}, {932, 962, -289}, {963, 963, 470}, {964, 974, -289}, },
            {{48, 974, -383}, },
            {{48, 931, -51}, {932, 932, 471}, {933, 963, -166}, {964, 964, 472}, {965, 974, -166}, },
            {{48, 974, -385}, },
            {{48, 931, -51}, {932, 932, 473}, {933, 963, -166}, {964, 964, 474}, {965, 974, -166}, },
            {{48, 974, -387}, },
            {{48, 912, -24}, {913, 913, 475}, {914, 944, -53}, {945, 945, 476}, {946, 974, -46}, },
            {{48, 974, -389}, },
            {{48, 912, -24}, {913, 913, 477}, {914, 944, -53}, {945, 945, 478}, {946, 974, -46}, },
            {{48, 974, -391}, },
            {{48, 912, -24}, {913, 913, 479}, {914, 944, -53}, {945, 945, 480}, {946, 974, -46}, },
            {{48, 974, -393}, },
            {{48, 928, -157}, {929, 929, 481}, {930, 960, -157}, {961, 961, 482}, {962, 974, -41}, },
            {{48, 974, -395}, },
            {{48, 931, -51}, {932, 932, 483}, {933, 963, -166}, {964, 964, 484}, {965, 974, -166}, },
            {{48, 974, -397}, },
            {{48, 931, -51}, {932, 932, 485}, {933, 963, -166}, {964, 964, 486}, {965, 974, -166}, },
            {{48, 974, -399}, },
            {{48, 90, -24}, {95, 95, 487}, {97, 974, -24}, },
            {{48, 974, -401}, },
            {{48, 974, -401}, },
            {{48, 90, -24}, {95, 95, 488}, {97, 974, -24}, },
            {{48, 974, -404}, },
            {{48, 974, -404}, },
            {{48, 931, -51}, {932, 932, 489}, {933, 963, -166}, {964, 964, 490}, {965, 974, -166}, },
            {{48, 974, -407}, },
            {{48, 930, -37}, {931, 931, 491}, {932, 961, -321}, {962, 962, 492}, {963, 963, 493}, {964, 974, -289}, },
            {{48, 930, -37}, {931, 931, 494}, {932, 961, -321}, {962, 962, 495}, {963, 963, 496}, {964, 974, -289}, },
            {{48, 974, -409}, },
            {{48, 974, -410}, },
            {{48, 912, -24}, {913, 913, 497}, {914, 916, 101}, {917, 917, 498}, {918, 944, -54}, {945, 945, 499}, {946, 948, 109}, {949, 949, 500}, {950, 974, -48}, },
            {{48, 974, -413}, },
            {{48, 912, -24}, {913, 913, 501}, {914, 916, 101}, {917, 917, 502}, {918, 944, -54}, {945, 945, 503}, {946, 948, 109}, {949, 949, 504}, {950, 974, -48}, },
            {{48, 974, -415}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 90, -24}, {95, 95, 505}, {97, 974, -24}, },
            {{48, 974, -423}, },
            {{48, 974, -423}, },
            {{48, 90, -24}, {95, 95, 506}, {97, 974, -24}, },
            {{48, 974, -426}, },
            {{48, 974, -426}, },
            {{48, 927, -45}, {928, 928, 507}, {929, 959, -45}, {960, 960, 508}, {961, 974, -45}, },
            {{48, 974, -429}, },
            {{48, 927, -45}, {928, 928, 509}, {929, 959, -45}, {960, 960, 510}, {961, 974, -45}, },
            {{48, 974, -431}, },
            {{48, 916, -50}, {917, 917, 511}, {918, 948, -54}, {949, 949, 512}, {950, 974, -48}, },
            {{48, 974, -433}, },
            {{48, 916, -50}, {917, 917, 513}, {918, 948, -54}, {949, 949, 514}, {950, 974, -48}, },
            {{48, 974, -435}, },
            {{48, 912, -24}, {913, 913, 515}, {914, 944, -53}, {945, 945, 516}, {946, 974, -46}, },
            {{48, 974, -437}, },
            {{48, 916, -50}, {917, 917, 517}, {918, 948, -54}, {949, 949, 518}, {950, 974, -48}, },
            {{48, 974, -439}, },
            {{48, 912, -24}, {913, 913, 519}, {914, 944, -53}, {945, 945, 520}, {946, 974, -46}, },
            {{48, 974, -441}, },
            {{48, 912, -24}, {913, 913, 521}, {914, 944, -53}, {945, 945, 522}, {946, 974, -46}, },
            {{48, 974, -443}, },
            {{48, 916, -50}, {917, 917, 523}, {918, 948, -54}, {949, 949, 524}, {950, 974, -48}, },
            {{48, 974, -445}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 930, -37}, {931, 931, 525}, {932, 961, -321}, {962, 962, 526}, {963, 963, 527}, {964, 974, -289}, },
            {{48, 974, -24}, },
            {{48, 930, -37}, {931, 931, 528}, {932, 961, -321}, {962, 962, 529}, {963, 963, 530}, {964, 974, -289}, },
            {{48, 974, -24}, },
            {{48, 974, -451}, },
            {{48, 974, -24}, },
            {{48, 974, -453}, },
            {{48, 974, -24}, },
            {{48, 90, -24}, {95, 95, 531}, {97, 974, -24}, },
            {{48, 974, -459}, },
            {{913, 913, 532}, {945, 945, 533}, },
            {{913, 945, -461}, },
            {{913, 913, 534}, {945, 945, 535}, },
            {{913, 945, -463}, },
            {{48, 912, -24}, {913, 913, 536}, {914, 944, -53}, {945, 945, 537}, {946, 974, -46}, },
            {{48, 974, -465}, },
            {{48, 912, -24}, {913, 913, 538}, {914, 944, -53}, {945, 945, 539}, {946, 974, -46}, },
            {{48, 974, -467}, },
            {{48, 918, -126}, {919, 919, 540}, {920, 941, -198}, {942, 950, -126}, {951, 951, 541}, {952, 974, -198}, },
            {{48, 974, -469}, },
            {{48, 90, -24}, {95, 95, 542}, {97, 974, -24}, },
            {{48, 974, -471}, },
            {{48, 912, -24}, {913, 936, 101}, {937, 937, 543}, {938, 968, -267}, {969, 969, 544}, {970, 974, -24}, },
            {{48, 974, -473}, },
            {{48, 936, -473}, {937, 937, 545}, {938, 968, -267}, {969, 969, 546}, {970, 974, -24}, },
            {{48, 974, -475}, },
            {{48, 923, -311}, {924, 924, 547}, {925, 955, -311}, {956, 956, 548}, {957, 974, -311}, },
            {{48, 974, -477}, },
            {{48, 931, -51}, {932, 932, 549}, {933, 963, -166}, {964, 964, 550}, {965, 974, -166}, },
            {{48, 974, -479}, },
            {{48, 923, -311}, {924, 924, 551}, {925, 955, -311}, {956, 956, 552}, {957, 974, -311}, },
            {{48, 974, -481}, },
            {{48, 902, -24}, {904, 904, 553}, {905, 916, -48}, {917, 917, 554}, {918, 940, -48}, {941, 941, 555}, {942, 948, -48}, {949, 949, 556}, {950, 974, -48}, },
            {{48, 974, -483}, },
            {{48, 918, -126}, {919, 919, 557}, {920, 950, -469}, {951, 951, 558}, {952, 974, -198}, },
            {{48, 974, -485}, },
            {{48, 918, -126}, {919, 919, 559}, {920, 950, -469}, {951, 951, 560}, {952, 974, -198}, },
            {{48, 974, -487}, },
            {{48, 912, -24}, {913, 913, 561}, {914, 915, 101}, {916, 916, 562}, {917, 917, 563}, {918, 927, 101}, {928, 928, 564}, {929, 930, 101}, {931, 931, 565}, {932, 944, -289}, {945, 945, 566}, {946, 947, 109}, {948, 948, 567}, {949, 949, 568}, {950, 959, 109}, {960, 960, 569}, {961, 962, 109}, {963, 963, 570}, {964, 974, -289}, },
            {{48, 912, -24}, {913, 913, 571}, {914, 915, 101}, {916, 916, 572}, {917, 917, 573}, {918, 927, 101}, {928, 928, 574}, {929, 930, 101}, {931, 931, 575}, {932, 944, -289}, {945, 945, 576}, {946, 947, 109}, {948, 948, 577}, {949, 949, 578}, {950, 959, 109}, {960, 960, 579}, {961, 962, 109}, {963, 963, 580}, {964, 974, -289}, },
            {{48, 904, -24}, {905, 905, 581}, {906, 918, -126}, {919, 919, 582}, {920, 941, -198}, {942, 942, 583}, {943, 950, -126}, {951, 951, 584}, {952, 974, -198}, },
            {{48, 974, -491}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 930, -37}, {931, 931, 585}, {932, 961, -321}, {962, 962, 586}, {963, 963, 587}, {964, 974, -289}, },
            {{48, 974, -24}, },
            {{48, 974, -500}, },
            {{48, 974, -24}, },
            {{48, 930, -37}, {931, 931, 588}, {932, 961, -321}, {962, 962, 589}, {963, 963, 590}, {964, 974, -289}, },
            {{48, 974, -24}, },
            {{48, 974, -504}, },
            {{48, 912, -24}, {913, 913, 591}, {914, 944, -53}, {945, 945, 592}, {946, 974, -46}, },
            {{48, 912, -24}, {913, 913, 593}, {914, 944, -53}, {945, 945, 594}, {946, 974, -46}, },
            {{48, 912, -24}, {913, 913, 595}, {914, 944, -53}, {945, 945, 596}, {946, 974, -46}, },
            {{48, 974, -509}, },
            {{48, 912, -24}, {913, 913, 597}, {914, 944, -53}, {945, 945, 598}, {946, 974, -46}, },
            {{48, 974, -511}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 930, -37}, {931, 931, 599}, {932, 962, -289}, {963, 963, 600}, {964, 974, -289}, },
            {{48, 974, -517}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 913, -206}, {914, 914, 601}, {915, 945, -206}, {946, 946, 602}, {947, 974, -206}, },
            {{48, 974, -521}, },
            {{48, 913, -206}, {914, 914, 603}, {915, 945, -206}, {946, 946, 604}, {947, 974, -206}, },
            {{48, 974, -523}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 906, -24}, {908, 908, 605}, {910, 971, -24}, {972, 972, 606}, {973, 974, -24}, },
            {},
            {},
            {},
            {},
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 931, -51}, {932, 932, 607}, {933, 963, -166}, {964, 964, 608}, {965, 974, -166}, },
            {{48, 974, -542}, },
            {{48, 926, -47}, {927, 927, 609}, {928, 958, -47}, {959, 959, 610}, {960, 974, -47}, },
            {{48, 930, -37}, {931, 931, 611}, {932, 962, -289}, {963, 963, 612}, {964, 974, -289}, },
            {{48, 974, -545}, },
            {{48, 930, -37}, {931, 931, 613}, {932, 962, -289}, {963, 963, 614}, {964, 974, -289}, },
            {{48, 974, -547}, },
            {{48, 923, -311}, {924, 924, 615}, {925, 955, -311}, {956, 956, 616}, {957, 974, -311}, },
            {{48, 974, -549}, },
            {{48, 920, -43}, {921, 921, 617}, {922, 952, -44}, {953, 953, 618}, {954, 974, -44}, },
            {{48, 974, -551}, },
            {{48, 923, -311}, {924, 924, 619}, {925, 955, -311}, {956, 956, 620}, {957, 974, -311}, },
            {{48, 974, -553}, },
            {{48, 930, -37}, {931, 931, 621}, {932, 961, -321}, {962, 962, 622}, {963, 963, 623}, {964, 974, -289}, },
            {{48, 930, -37}, {931, 931, 624}, {932, 961, -321}, {962, 962, 625}, {963, 963, 626}, {964, 974, -289}, },
            {{48, 974, -555}, },
            {{48, 974, -556}, },
            {{48, 930, -37}, {931, 931, 627}, {932, 962, -289}, {963, 963, 628}, {964, 974, -289}, },
            {{48, 974, -559}, },
            {{48, 930, -37}, {931, 931, 629}, {932, 962, -289}, {963, 963, 630}, {964, 974, -289}, },
            {{48, 974, -561}, },
            {{48, 924, -162}, {925, 925, 631}, {926, 956, -162}, {957, 957, 632}, {958, 974, -162}, },
            {{48, 920, -43}, {921, 921, 633}, {922, 952, -44}, {953, 953, 634}, {954, 974, -44}, },
            {{48, 927, -45}, {928, 928, 635}, {929, 959, -45}, {960, 960, 636}, {961, 974, -45}, },
            {{48, 928, -157}, {929, 929, 637}, {930, 960, -157}, {961, 961, 638}, {962, 974, -41}, },
            {{48, 932, -175}, {933, 933, 639}, {934, 964, -175}, {965, 965, 640}, {966, 974, -51}, },
            {{48, 974, -563}, },
            {{48, 974, -564}, },
            {{48, 974, -565}, },
            {{48, 974, -566}, },
            {{48, 974, -567}, },
            {{48, 924, -162}, {925, 925, 641}, {926, 956, -162}, {957, 957, 642}, {958, 974, -162}, },
            {{48, 920, -43}, {921, 921, 643}, {922, 952, -44}, {953, 953, 644}, {954, 974, -44}, },
            {{48, 927, -45}, {928, 928, 645}, {929, 959, -45}, {960, 960, 646}, {961, 974, -45}, },
            {{48, 928, -157}, {929, 929, 647}, {930, 960, -157}, {961, 961, 648}, {962, 974, -41}, },
            {{48, 932, -175}, {933, 933, 649}, {934, 964, -175}, {965, 965, 650}, {966, 974, -51}, },
            {{48, 974, -573}, },
            {{48, 974, -574}, },
            {{48, 974, -575}, },
            {{48, 974, -576}, },
            {{48, 974, -577}, },
            {{48, 928, -157}, {929, 929, 651}, {930, 960, -157}, {961, 961, 652}, {962, 974, -41}, },
            {{48, 928, -157}, {929, 929, 653}, {930, 960, -157}, {961, 961, 654}, {962, 974, -41}, },
            {{48, 974, -583}, },
            {{48, 974, -584}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 924, -162}, {925, 925, 655}, {926, 956, -162}, {957, 957, 656}, {958, 974, -162}, },
            {{48, 974, -593}, },
            {{48, 924, -162}, {925, 925, 657}, {926, 956, -162}, {957, 957, 658}, {958, 974, -162}, },
            {{48, 974, -595}, },
            {{48, 924, -162}, {925, 925, 659}, {926, 956, -162}, {957, 957, 660}, {958, 974, -162}, },
            {{48, 974, -597}, },
            {{48, 924, -162}, {925, 925, 661}, {926, 956, -162}, {957, 957, 662}, {958, 974, -162}, },
            {{48, 974, -599}, },
            {{48, 905, -24}, {906, 906, 663}, {908, 920, -43}, {921, 921, 664}, {922, 942, -44}, {943, 943, 665}, {944, 952, -43}, {953, 953, 666}, {954, 974, -44}, },
            {{48, 974, -601}, },
            {{48, 916, -50}, {917, 917, 667}, {918, 948, -54}, {949, 949, 668}, {950, 974, -48}, },
            {{48, 974, -603}, },
            {{48, 916, -50}, {917, 917, 669}, {918, 948, -54}, {949, 949, 670}, {950, 974, -48}, },
            {{48, 974, -605}, },
            {{48, 931, -51}, {932, 932, 671}, {933, 963, -166}, {964, 964, 672}, {965, 974, -166}, },
            {{48, 974, -607}, },
            {{48, 902, -24}, {904, 904, 673}, {905, 916, -48}, {917, 917, 674}, {918, 940, -48}, {941, 941, 675}, {942, 948, -48}, {949, 949, 676}, {950, 974, -48}, },
            {{48, 974, -609}, },
            {{48, 931, -51}, {932, 932, 677}, {933, 963, -166}, {964, 964, 678}, {965, 974, -166}, },
            {{48, 974, -611}, },
            {{48, 918, -126}, {919, 919, 679}, {920, 950, -469}, {951, 951, 680}, {952, 974, -198}, },
            {{48, 974, -613}, },
            {{48, 918, -126}, {919, 919, 681}, {920, 950, -469}, {951, 951, 682}, {952, 974, -198}, },
            {{48, 974, -615}, },
            {{48, 912, -24}, {913, 913, 683}, {914, 944, -53}, {945, 945, 684}, {946, 974, -46}, },
            {{48, 974, -617}, },
            {{48, 921, -41}, {922, 922, 685}, {923, 953, -293}, {954, 954, 686}, {955, 974, -293}, },
            {{48, 974, -619}, },
            {{48, 912, -24}, {913, 913, 687}, {914, 944, -53}, {945, 945, 688}, {946, 974, -46}, },
            {{48, 974, -621}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 918, -126}, {919, 919, 689}, {920, 950, -469}, {951, 951, 690}, {952, 974, -198}, },
            {{48, 974, -629}, },
            {{48, 918, -126}, {919, 919, 691}, {920, 950, -469}, {951, 951, 692}, {952, 974, -198}, },
            {{48, 974, -631}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 912, -24}, {913, 913, 693}, {914, 944, -53}, {945, 945, 694}, {946, 974, -46}, },
            {{48, 974, -635}, },
            {{48, 912, -24}, {913, 913, 695}, {914, 920, 101}, {921, 921, 696}, {922, 944, -44}, {945, 945, 697}, {946, 952, 109}, {953, 953, 698}, {954, 974, -44}, },
            {{48, 974, -637}, },
            {{48, 926, -47}, {927, 927, 699}, {928, 958, -47}, {959, 959, 700}, {960, 974, -47}, },
            {{48, 974, -639}, },
            {{48, 924, -162}, {925, 925, 701}, {926, 956, -162}, {957, 957, 702}, {958, 974, -162}, },
            {{48, 974, -641}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 912, -24}, {913, 913, 703}, {914, 944, -53}, {945, 945, 704}, {946, 974, -46}, },
            {{48, 974, -645}, },
            {{48, 912, -24}, {913, 913, 705}, {914, 920, 101}, {921, 921, 706}, {922, 944, -44}, {945, 945, 707}, {946, 952, 109}, {953, 953, 708}, {954, 974, -44}, },
            {{48, 974, -647}, },
            {{48, 926, -47}, {927, 927, 709}, {928, 958, -47}, {959, 959, 710}, {960, 974, -47}, },
            {{48, 974, -649}, },
            {{48, 924, -162}, {925, 925, 711}, {926, 956, -162}, {957, 957, 712}, {958, 974, -162}, },
            {{48, 974, -651}, },
            {{48, 912, -24}, {913, 913, 713}, {914, 916, 101}, {917, 917, 714}, {918, 944, -54}, {945, 945, 715}, {946, 948, 109}, {949, 949, 716}, {950, 974, -48}, },
            {{48, 974, -653}, },
            {{48, 912, -24}, {913, 913, 717}, {914, 916, 101}, {917, 917, 718}, {918, 944, -54}, {945, 945, 719}, {946, 948, 109}, {949, 949, 720}, {950, 974, -48}, },
            {{48, 974, -655}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 122, -24}, {902, 902, 721}, {904, 939, -24}, {940, 940, 722}, {941, 974, -24}, },
            {{48, 974, -661}, },
            {{48, 912, -24}, {913, 913, 723}, {914, 944, -53}, {945, 945, 724}, {946, 974, -46}, },
            {{48, 974, -663}, },
            {{48, 912, -24}, {913, 913, 725}, {914, 944, -53}, {945, 945, 726}, {946, 974, -46}, },
            {{48, 912, -24}, {913, 913, 727}, {914, 944, -53}, {945, 945, 728}, {946, 974, -46}, },
            {{48, 974, -665}, },
            {{48, 974, -666}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 926, -47}, {927, 927, 729}, {928, 958, -47}, {959, 959, 730}, {960, 974, -47}, },
            {{48, 974, -673}, },
            {{48, 930, -37}, {931, 931, 731}, {932, 961, -321}, {962, 962, 732}, {963, 963, 733}, {964, 974, -289}, },
            {{48, 930, -37}, {931, 931, 734}, {932, 961, -321}, {962, 962, 735}, {963, 963, 736}, {964, 974, -289}, },
            {{48, 974, -675}, },
            {{48, 974, -676}, },
            {{48, 926, -47}, {927, 927, 737}, {928, 958, -47}, {959, 959, 738}, {960, 974, -47}, },
            {{48, 974, -679}, },
            {{9, 9, 739}, {32, 32, 740}, {48, 974, -24}, },
            {{9, 974, -681}, },
            {{9, 974, -681}, },
            {{9, 974, -681}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 902, -24}, {904, 904, 741}, {905, 905, 742}, {906, 916, -48}, {917, 917, 743}, {918, 918, 101}, {919, 919, 744}, {920, 940, -198}, {941, 941, 745}, {942, 942, 746}, {943, 948, -48}, {949, 949, 747}, {950, 950, 109}, {951, 951, 748}, {952, 974, -198}, },
            {{48, 974, -687}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 915, -259}, {916, 916, 749}, {917, 947, -259}, {948, 948, 750}, {949, 974, -207}, },
            {{48, 974, -695}, },
            {{48, 924, -162}, {925, 925, 751}, {926, 956, -162}, {957, 957, 752}, {958, 974, -162}, },
            {{48, 922, -143}, {923, 923, 753}, {924, 954, -143}, {955, 955, 754}, {956, 974, -126}, },
            {{48, 974, -697}, },
            {{48, 974, -698}, },
            {{48, 914, -147}, {915, 915, 755}, {916, 946, -147}, {947, 947, 756}, {948, 974, -147}, },
            {{48, 974, -701}, },
            {{48, 122, -24}, {902, 902, 757}, {904, 939, -24}, {940, 940, 758}, {941, 974, -24}, },
            {{48, 974, -703}, },
            {{48, 915, -259}, {916, 916, 759}, {917, 947, -259}, {948, 948, 760}, {949, 974, -207}, },
            {{48, 974, -705}, },
            {{48, 924, -162}, {925, 925, 761}, {926, 956, -162}, {957, 957, 762}, {958, 974, -162}, },
            {{48, 922, -143}, {923, 923, 763}, {924, 954, -143}, {955, 955, 764}, {956, 974, -126}, },
            {{48, 974, -707}, },
            {{48, 974, -708}, },
            {{48, 914, -147}, {915, 915, 765}, {916, 946, -147}, {947, 947, 766}, {948, 974, -147}, },
            {{48, 974, -711}, },
            {{48, 912, -24}, {913, 913, 767}, {914, 944, -53}, {945, 945, 768}, {946, 974, -46}, },
            {{48, 974, -713}, },
            {{48, 930, -37}, {931, 931, 769}, {932, 961, -321}, {962, 962, 770}, {963, 963, 771}, {964, 974, -289}, },
            {{48, 930, -37}, {931, 931, 772}, {932, 961, -321}, {962, 962, 773}, {963, 963, 774}, {964, 974, -289}, },
            {{48, 974, -715}, },
            {{48, 974, -716}, },
            {{48, 930, -37}, {931, 931, 775}, {932, 961, -321}, {962, 962, 776}, {963, 963, 777}, {964, 974, -289}, },
            {{48, 930, -37}, {931, 931, 778}, {932, 961, -321}, {962, 962, 779}, {963, 963, 780}, {964, 974, -289}, },
            {{48, 974, -719}, },
            {{48, 974, -720}, },
            {{48, 922, -143}, {923, 923, 781}, {924, 954, -143}, {955, 955, 782}, {956, 974, -126}, },
            {{48, 974, -723}, },
            {{48, 922, -143}, {923, 923, 783}, {924, 954, -143}, {955, 955, 784}, {956, 974, -126}, },
            {{48, 974, -725}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 932, -175}, {933, 933, 785}, {934, 964, -175}, {965, 965, 786}, {966, 974, -51}, },
            {{48, 974, -731}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 932, -175}, {933, 933, 787}, {934, 964, -175}, {965, 965, 788}, {966, 974, -51}, },
            {{48, 974, -739}, },
            {{9, 32, -681}, {913, 913, 789}, {945, 945, 790}, },
            {{9, 945, -741}, },
            {{48, 930, -37}, {931, 931, 791}, {932, 961, -321}, {962, 962, 792}, {963, 963, 793}, {964, 974, -289}, },
            {{48, 974, -24}, },
            {{48, 930, -37}, {931, 931, 794}, {932, 961, -321}, {962, 962, 795}, {963, 963, 796}, {964, 974, -289}, },
            {{48, 974, -24}, },
            {{48, 974, -743}, },
            {{48, 974, -24}, },
            {{48, 974, -745}, },
            {{48, 974, -24}, },
            {{48, 920, -43}, {921, 921, 797}, {922, 952, -44}, {953, 953, 798}, {954, 974, -44}, },
            {{48, 974, -751}, },
            {{48, 122, -24}, {902, 902, 799}, {904, 939, -24}, {940, 940, 800}, {941, 974, -24}, },
            {{48, 974, -753}, },
            {{48, 926, -47}, {927, 927, 801}, {928, 958, -47}, {959, 959, 802}, {960, 974, -47}, },
            {{48, 974, -755}, },
            {{48, 928, -157}, {929, 929, 803}, {930, 960, -157}, {961, 961, 804}, {962, 974, -41}, },
            {{48, 974, -757}, },
            {{48, 928, -157}, {929, 929, 805}, {930, 960, -157}, {961, 961, 806}, {962, 974, -41}, },
            {{48, 974, -759}, },
            {{48, 920, -43}, {921, 921, 807}, {922, 952, -44}, {953, 953, 808}, {954, 974, -44}, },
            {{48, 974, -761}, },
            {{48, 912, -24}, {913, 913, 809}, {914, 944, -53}, {945, 945, 810}, {946, 974, -46}, },
            {{48, 974, -763}, },
            {{48, 926, -47}, {927, 927, 811}, {928, 958, -47}, {959, 959, 812}, {960, 974, -47}, },
            {{48, 974, -765}, },
            {{48, 928, -157}, {929, 929, 813}, {930, 960, -157}, {961, 961, 814}, {962, 974, -41}, },
            {{48, 974, -767}, },
            {{48, 928, -157}, {929, 929, 815}, {930, 960, -157}, {961, 961, 816}, {962, 974, -41}, },
            {{48, 974, -769}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 918, -126}, {919, 919, 817}, {920, 950, -469}, {951, 951, 818}, {952, 974, -198}, },
            {{48, 974, -783}, },
            {{48, 918, -126}, {919, 919, 819}, {920, 950, -469}, {951, 951, 820}, {952, 974, -198}, },
            {{48, 974, -785}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{923, 923, 821}, {955, 955, 822}, },
            {{923, 955, -791}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 921, -41}, {922, 922, 823}, {923, 953, -293}, {954, 954, 824}, {955, 974, -293}, },
            {{48, 974, -799}, },
            {{48, 922, -143}, {923, 923, 825}, {924, 954, -143}, {955, 955, 826}, {956, 974, -126}, },
            {{48, 974, -801}, },
            {{48, 914, -147}, {915, 915, 827}, {916, 946, -147}, {947, 947, 828}, {948, 974, -147}, },
            {{48, 974, -803}, },
            {{48, 122, -24}, {902, 902, 829}, {904, 939, -24}, {940, 940, 830}, {941, 974, -24}, },
            {{48, 974, -805}, },
            {{48, 931, -51}, {932, 932, 831}, {933, 963, -166}, {964, 964, 832}, {965, 974, -166}, },
            {{48, 974, -807}, },
            {{48, 921, -41}, {922, 922, 833}, {923, 953, -293}, {954, 954, 834}, {955, 974, -293}, },
            {{48, 974, -809}, },
            {{48, 922, -143}, {923, 923, 835}, {924, 954, -143}, {955, 955, 836}, {956, 974, -126}, },
            {{48, 974, -811}, },
            {{48, 914, -147}, {915, 915, 837}, {916, 946, -147}, {947, 947, 838}, {948, 974, -147}, },
            {{48, 974, -813}, },
            {{48, 912, -24}, {913, 913, 839}, {914, 944, -53}, {945, 945, 840}, {946, 974, -46}, },
            {{48, 974, -815}, },
            {{48, 931, -51}, {932, 932, 841}, {933, 963, -166}, {964, 964, 842}, {965, 974, -166}, },
            {{48, 974, -817}, },
            {{48, 935, -202}, {936, 936, 843}, {937, 967, -202}, {968, 968, 844}, {969, 974, -202}, },
            {{48, 974, -819}, },
            {{48, 935, -202}, {936, 936, 845}, {937, 967, -202}, {968, 968, 846}, {969, 974, -202}, },
            {{48, 974, -821}, },
            {{923, 923, 847}, {955, 955, 848}, },
            {{923, 955, -823}, },
            {{48, 912, -24}, {913, 913, 849}, {914, 944, -53}, {945, 945, 850}, {946, 974, -46}, },
            {{48, 974, -825}, },
            {{48, 918, -126}, {919, 919, 851}, {920, 950, -469}, {951, 951, 852}, {952, 974, -198}, },
            {{48, 974, -827}, },
            {{48, 910, -24}, {911, 911, 853}, {912, 973, -24}, {974, 974, 854}, },
            {{48, 974, -829}, },
            {{48, 923, -311}, {924, 924, 855}, {925, 955, -311}, {956, 956, 856}, {957, 974, -311}, },
            {{48, 974, -831}, },
            {{48, 918, -126}, {919, 919, 857}, {920, 950, -469}, {951, 951, 858}, {952, 974, -198}, },
            {{48, 974, -833}, },
            {{48, 912, -24}, {913, 913, 859}, {914, 944, -53}, {945, 945, 860}, {946, 974, -46}, },
            {{48, 974, -835}, },
            {{48, 918, -126}, {919, 919, 861}, {920, 950, -469}, {951, 951, 862}, {952, 974, -198}, },
            {{48, 974, -837}, },
            {{48, 936, -473}, {937, 937, 863}, {938, 968, -267}, {969, 969, 864}, {970, 974, -24}, },
            {{48, 974, -839}, },
            {{48, 923, -311}, {924, 924, 865}, {925, 955, -311}, {956, 956, 866}, {957, 974, -311}, },
            {{48, 974, -841}, },
            {{48, 918, -126}, {919, 919, 867}, {920, 950, -469}, {951, 951, 868}, {952, 974, -198}, },
            {{48, 974, -843}, },
            {{48, 918, -126}, {919, 919, 869}, {920, 950, -469}, {951, 951, 870}, {952, 974, -198}, },
            {{48, 974, -845}, },
            {{48, 918, -126}, {919, 919, 871}, {920, 950, -469}, {951, 951, 872}, {952, 974, -198}, },
            {{48, 974, -847}, },
            {{921, 921, 873}, {953, 953, 874}, },
            {{921, 953, -849}, },
            {{48, 930, -37}, {931, 931, 875}, {932, 962, -289}, {963, 963, 876}, {964, 974, -289}, },
            {{48, 974, -851}, },
            {{48, 935, -202}, {936, 936, 877}, {937, 967, -202}, {968, 968, 878}, {969, 974, -202}, },
            {{48, 974, -853}, },
            {{48, 924, -162}, {925, 925, 879}, {926, 956, -162}, {957, 957, 880}, {958, 974, -162}, },
            {{48, 974, -855}, },
            {{48, 923, -311}, {924, 924, 881}, {925, 955, -311}, {956, 956, 882}, {957, 974, -311}, },
            {{48, 974, -857}, },
            {{48, 930, -37}, {931, 931, 883}, {932, 962, -289}, {963, 963, 884}, {964, 974, -289}, },
            {{48, 974, -859}, },
            {{48, 930, -37}, {931, 931, 885}, {932, 962, -289}, {963, 963, 886}, {964, 974, -289}, },
            {{48, 974, -861}, },
            {{48, 935, -202}, {936, 936, 887}, {937, 967, -202}, {968, 968, 888}, {969, 974, -202}, },
            {{48, 974, -863}, },
            {{48, 924, -162}, {925, 925, 889}, {926, 956, -162}, {957, 957, 890}, {958, 974, -162}, },
            {{48, 974, -865}, },
            {{48, 923, -311}, {924, 924, 891}, {925, 955, -311}, {956, 956, 892}, {957, 974, -311}, },
            {{48, 974, -867}, },
            {{48, 930, -37}, {931, 931, 893}, {932, 962, -289}, {963, 963, 894}, {964, 974, -289}, },
            {{48, 974, -869}, },
            {{48, 930, -37}, {931, 931, 895}, {932, 961, -321}, {962, 962, 896}, {963, 963, 897}, {964, 974, -289}, },
            {{48, 974, -871}, },
            {{48, 930, -37}, {931, 931, 898}, {932, 961, -321}, {962, 962, 899}, {963, 963, 900}, {964, 974, -289}, },
            {{48, 974, -873}, },
            {{911, 911, 901}, {937, 937, 902}, {969, 969, 903}, {974, 974, 904}, },
            {{911, 974, -875}, },
            {{48, 905, -24}, {906, 906, 905}, {908, 942, -24}, {943, 943, 906}, {944, 974, -24}, },
            {{48, 974, -877}, },
            {{48, 918, -126}, {919, 919, 907}, {920, 950, -469}, {951, 951, 908}, {952, 974, -198}, },
            {{48, 974, -879}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 912, -24}, {913, 913, 909}, {914, 944, -53}, {945, 945, 910}, {946, 974, -46}, },
            {{48, 974, -883}, },
            {{48, 918, -126}, {919, 919, 911}, {920, 950, -469}, {951, 951, 912}, {952, 974, -198}, },
            {{48, 974, -885}, },
            {{48, 920, -43}, {921, 921, 913}, {922, 952, -44}, {953, 953, 914}, {954, 974, -44}, },
            {{48, 974, -887}, },
            {{48, 918, -126}, {919, 919, 915}, {920, 950, -469}, {951, 951, 916}, {952, 974, -198}, },
            {{48, 974, -889}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 912, -24}, {913, 913, 917}, {914, 944, -53}, {945, 945, 918}, {946, 974, -46}, },
            {{48, 974, -893}, },
            {{48, 918, -126}, {919, 919, 919}, {920, 950, -469}, {951, 951, 920}, {952, 974, -198}, },
            {{48, 974, -895}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{931, 931, 921}, {962, 962, 922}, {963, 963, 923}, },
            {{931, 931, 924}, {962, 962, 925}, {963, 963, 926}, },
            {{931, 963, -904}, },
            {{931, 963, -903}, },
            {{48, 912, -24}, {913, 913, 927}, {914, 944, -53}, {945, 945, 928}, {946, 974, -46}, },
            {{48, 974, -907}, },
            {{48, 930, -37}, {931, 931, 929}, {932, 961, -321}, {962, 962, 930}, {963, 963, 931}, {964, 974, -289}, },
            {{48, 974, -909}, },
            {{48, 931, -51}, {932, 932, 932}, {933, 963, -166}, {964, 964, 933}, {965, 974, -166}, },
            {{48, 974, -911}, },
            {{48, 930, -37}, {931, 931, 934}, {932, 961, -321}, {962, 962, 935}, {963, 963, 936}, {964, 974, -289}, },
            {{48, 974, -913}, },
            {{48, 912, -24}, {913, 913, 937}, {914, 944, -53}, {945, 945, 938}, {946, 974, -46}, },
            {{48, 974, -915}, },
            {{48, 930, -37}, {931, 931, 939}, {932, 961, -321}, {962, 962, 940}, {963, 963, 941}, {964, 974, -289}, },
            {{48, 974, -917}, },
            {{48, 931, -51}, {932, 932, 942}, {933, 963, -166}, {964, 964, 943}, {965, 974, -166}, },
            {{48, 974, -919}, },
            {{48, 930, -37}, {931, 931, 944}, {932, 961, -321}, {962, 962, 945}, {963, 963, 946}, {964, 974, -289}, },
            {{48, 974, -921}, },
            {},
            {},
            {},
            {},
            {},
            {},
            {{48, 930, -37}, {931, 931, 947}, {932, 961, -321}, {962, 962, 948}, {963, 963, 949}, {964, 974, -289}, },
            {{48, 974, -929}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 926, -47}, {927, 927, 950}, {928, 958, -47}, {959, 959, 951}, {960, 974, -47}, },
            {{48, 974, -934}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 930, -37}, {931, 931, 952}, {932, 961, -321}, {962, 962, 953}, {963, 963, 954}, {964, 974, -289}, },
            {{48, 974, -939}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 926, -47}, {927, 927, 955}, {928, 958, -47}, {959, 959, 956}, {960, 974, -47}, },
            {{48, 974, -944}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 930, -37}, {931, 931, 957}, {932, 961, -321}, {962, 962, 958}, {963, 963, 959}, {964, 974, -289}, },
            {{48, 974, -952}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 930, -37}, {931, 931, 960}, {932, 961, -321}, {962, 962, 961}, {963, 963, 962}, {964, 974, -289}, },
            {{48, 974, -957}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
            {{48, 974, -24}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {-1, 20, 3, 1, 1, 2, 0, 12, 20, 14, 14, 13, 13, 15, 13, 15, 13, 16, 15, 8, 13, 9, 19, 19, 19, 14, 14, 13, 19, 19, 19, 19, 19, 13, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 13, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 1, 0, -1, 17, -1, 16, 6, 10, 7, 11, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 5, 19, 19, 19, 19, 5, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 16, 13, 13, 13, 13, 5, 5, 13, 13, 19, 19, 19, 19, 19, 19, 19, 19, 5, 5, 5, 5, 19, 19, 5, 5, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 13, 19, 13, 19, 19, 19, 19, 19, -1, -1, 19, 19, 19, 19, 19, 5, 5, 13, 13, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 5, 5, 5, 5, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, -1, -1, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 5, 5, 19, 19, 5, 5, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 5, 5, 5, 5, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 5, 5, -1, -1, -1, -1, 19, 19, 19, 19, 19, 19, 5, 5, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 18, 18, 18, 18, 18, 18, 5, 5, 5, 5, 5, 5, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 5, 5, 5, 5, 19, 4, 19, 4, 19, 4, 19, 4, 19, 19, -1, -1, -1, -1, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 18, 18, 18, 18, 18, 18, 4, 19, 4, 19, 4, 19, 4, 19, 19, 19, 19, 19, 19, 19, 5, 5, 5, 5, 19, 19, 5, 5, 19, 19, 19, 19, 5, 5, 4, 4, 4, 4, 4, 4, 19, 5, 5, 5, 5, 5, 5, 5, 5, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 4, 4, 4, 4, 4, 4, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 5, 5, 5, 5, 5, 5, 19, 19, 19, 19, 5, 5, 19, 19, 19, 19, 19, 19, 19, 19, 5, 5, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 5, 5, 5, 5, 19, 19, 19, 19, 19, 19, 19, 19, 5, 5, 5, 5, 19, 19, 19, 19, 19, 19, 19, 19, 5, 5, 5, 5, 5, 5, 19, 19, 5, 5, 5, 5, 5, 5, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 5, 5, 5, 5, 19, 19, 5, 5, 5, 5, 5, 5, 19, 19, -1, -1, 19, 4, 19, 4, 19, 4, 19, 4, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 19, 19, 19, 19, 5, 5, 5, 5, -1, -1, 4, 4, 4, 4, 4, 4, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, -1, -1, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, -1, -1, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, -1, -1, 19, 19, 19, 19, 5, 5, 19, 19, 19, 19, 19, 19, 19, 19, 5, 5, 19, 19, 19, 19, 5, 5, 5, 5, 5, 5, -1, -1, -1, -1, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 5, 5, 5, 5, 5, 5, 19, 19, 5, 5, 5, 19, 19, 5, 5, 5, 19, 19, 5, 5, 5, 19, 19, 5, 5, 5, 5, 5, 5, 19, 19, 5, 5, 5, 19, 19, 5, 5, 5, 5, 5, 5, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
