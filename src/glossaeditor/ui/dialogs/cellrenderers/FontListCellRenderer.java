/*
 * Copyright 2009 Georgios "cyberpython" Migdos cyberpython@gmail.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License
 *       at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FontListCellRenderer.java
 *
 * Created on 1 Μαρ 2009, 7:47:54 μμ
 */

package glossaeditor.ui.dialogs.cellrenderers;

import java.awt.Component;
import java.awt.Font;
import javax.swing.JList;
import javax.swing.ListCellRenderer;

/**
 *
 * @author cyberpython
 */
public class FontListCellRenderer extends javax.swing.JPanel implements ListCellRenderer {

    /** Creates new form FontListCellRenderer */
    public FontListCellRenderer() {
        initComponents();

    }

    public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
        if(value instanceof Font){
            initialize((Font)value, index);
        }

        if (isSelected) {
                this.setOpaque(true);
                this.setBackground(list.getSelectionBackground());
                this.setForeground(list.getSelectionForeground());
                jLabel1.setBackground(list.getSelectionBackground());
                jLabel1.setForeground(list.getSelectionForeground());

            } else {
                this.setOpaque(true);
                this.setBackground(list.getBackground());
                this.setForeground(list.getForeground());
                jLabel1.setBackground(list.getBackground());
                jLabel1.setForeground(list.getForeground());
            }
            setEnabled(list.isEnabled());

        return this;
    }

    private void initialize(Font f, int index){
        this.jLabel1.setText(f.getFamily());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(glossaeditor.Slang.class).getContext().getResourceMap(FontListCellRenderer.class);
        setBackground(resourceMap.getColor("Form.background")); // NOI18N
        setForeground(resourceMap.getColor("Form.foreground")); // NOI18N
        setName("Form"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

}
